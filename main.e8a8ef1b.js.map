{"version":3,"sources":["scripts/main.js"],"names":["buttonStartRestart","document","querySelector","tableBody","score","info","rondomCounter","moveCells","direction","counter","textContent","restart","infoTraffic","infoTrafficInteration","infoTrafficSort","infoTrafficInterationSort","i","forEach","cell","index","undefined","currentCell","children","classList","add","winnerGame","stopGame","addRondomNumber","upDateInfo","getElementsByClassName","remove","length","filter","Number","splice","dataset","countEmplyCells","trim","start","hasAttribute","setAttribute","row","rondomCell","getRondomNumber","number","rondomIndex","min","max","Math","floor","random","map","addEventListener","evt","body","preventDefault","code"],"mappings":";AAAA,aA0QC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxQD,IAAMA,EAAqBC,SAASC,cAAc,UAC5CC,EAAYF,SAASC,cAAc,SACnCE,EAAQH,SAASC,cAAc,eAC/BG,EAAO,CACR,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,IAEDC,EAAgB,EAiCpB,SAASC,EAAUC,GACXC,IAAAA,EAAUL,EAAMM,YAEtBC,IAEMC,IAAAA,EAAc,CACf,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,IAGLC,EAAsBD,EAAaJ,GAE7BM,IAAAA,EAAkB,CACnB,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,IAGLC,EAA0BH,EAAaE,EAAiBN,GAEnD,IAAIQ,IAAAA,EAAAA,SAAAA,GACPF,EAAgBE,EAAI,GAAGC,QAAQ,SAACC,EAAMC,GAChCD,QAASE,IAATF,EAAoB,CAChBG,IAAAA,EAAclB,EAAUmB,SAASN,GAAGM,SAASH,GAEnDE,EAAYX,YAAiBQ,GAAAA,OAAAA,GAC7BG,EAAYE,UAAUC,IAAmBH,eAAAA,OAAAA,EAAYX,kBANlDM,EAAI,EAAGA,EAAI,EAAGA,IAAdA,EAAAA,GAWTS,IACAC,EAASjB,GACTkB,IACAC,IAGF,SAASH,IACoB,OAAtBrB,EAAMM,aAGXT,SAAS4B,uBAAuB,eAAe,GAAGN,UAAUO,OAAO,UAGrE,SAASf,EAA0BH,EAAaE,EAAiBN,GACvDA,OAAAA,GACD,IAAA,YACE,IAAA,IAAIQ,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAgBE,EAAI,GAAK,CACvBJ,EAAYI,EAAI,GAAG,GACnBJ,EAAYI,EAAI,GAAG,GACnBJ,EAAYI,EAAI,GAAG,GACnBJ,EAAYI,EAAI,GAAG,IAGvB,MACG,IAAA,aACE,IAAA,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAgBE,EAAI,GAAK,CACvBJ,EAAYI,EAAI,GAAGJ,EAAYI,EAAI,GAAGe,OAAS,GAC/CnB,EAAYI,EAAI,GAAGJ,EAAYI,EAAI,GAAGe,OAAS,GAC/CnB,EAAYI,EAAI,GAAGJ,EAAYI,EAAI,GAAGe,OAAS,GAC/CnB,EAAYI,EAAI,GAAGJ,EAAYI,EAAI,GAAGe,OAAS,IAGnD,MACG,IAAA,UACE,IAAA,IAAIf,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAgBE,EAAI,GAAK,CACvBJ,EAAY,GAAGI,GACfJ,EAAY,GAAGI,GACfJ,EAAY,GAAGI,GACfJ,EAAY,GAAGI,IAGnB,MACG,IAAA,YACE,IAAA,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAgB,EAAIE,GAAK,CACvBJ,EAAY,GAAGA,EAAY,GAAGmB,OAAS,EAAIf,GAC3CJ,EAAY,GAAGA,EAAY,GAAGmB,OAAS,EAAIf,GAC3CJ,EAAY,GAAGA,EAAY,GAAGmB,OAAS,EAAIf,GAC3CJ,EAAY,GAAGA,EAAY,GAAGmB,OAAS,EAAIf,KASrD,SAASH,EAAsBD,EAAaJ,GACtCA,GAAc,YAAdA,GACiB,cAAdA,EACA,IAAIQ,IAAAA,EAAAA,SAAAA,GACPJ,EAAYI,EAAI,GAAK,CACnBX,EAAK,GAAGW,GACRX,EAAK,GAAGW,GACRX,EAAK,GAAGW,GACRX,EAAK,GAAGW,IACRgB,OAAO,SAAAd,GAAQA,OAAS,IAATA,IAEjBN,EAAYI,EAAI,GAAGC,QAAQ,SAACC,EAAMC,GAC5Bc,OAAOf,KAAUe,OAAOrB,EAAYI,EAAI,GAAGG,EAAQ,MACrDP,EAAYI,EAAI,GAAGG,GAAY,GAAA,OAAQ,GAAPD,GAChCd,EAAMM,YAAiB,GAAA,QAACN,EAAMM,YAAyB,GAARQ,GAC/CN,EAAYI,EAAI,GAAGkB,OAAOf,EAAQ,EAAG,OAZlCH,EAAI,EAAGA,EAAI,EAAGA,IAAdA,EAAAA,GAkBPR,GAAc,cAAdA,GACe,eAAdA,EACE,IAAIQ,IAAAA,EAAAA,SAAAA,GACPJ,EAAYI,EAAI,GAAKX,EAAKW,EAAI,GAAGgB,OAAO,SAAAd,GAAQA,OAAS,IAATA,IAEhDN,EAAYI,EAAI,GAAGC,QAAQ,SAACC,EAAMC,GAC5Bc,OAAOf,KAAUe,OAAOrB,EAAYI,EAAI,GAAGG,EAAQ,MACrDP,EAAYI,EAAI,GAAGG,EAAQ,GAAQ,GAAA,OAAQ,GAAPD,GACpCd,EAAMM,YAAiB,GAAA,QAACN,EAAMM,YAAyB,GAARQ,GAC/CN,EAAYI,EAAI,GAAGkB,OAAOf,EAAO,OAP9BH,EAAI,EAAGA,EAAI,EAAGA,IAAdA,EAAAA,GAcb,SAASU,EAASjB,IACVL,EAAMM,YAAeD,GAAY,GACW,MAA7CN,EAAUgC,QAAQC,gBAAgBC,QACrCpC,SAASC,cAAc,iBACpBqB,UAAUO,OAAO,UAIxB,SAASQ,IACHnC,EAAUoC,aAAa,iBACzBtC,SAAS4B,uBAAuB,eAAe,GAAGN,UAAUC,IAAI,UAGlElB,EAAgB,EAChBH,EAAUgC,QAAQC,gBAAkB,KACpCnC,SAASC,cAAc,iBAAiBqB,UAAUC,IAAI,UACtDxB,EAAmBuB,UAAUO,OAAO,SACpC9B,EAAmBuB,UAAUC,IAAI,WACjCxB,EAAmBU,YAAc,UACjCT,SAASC,cAAc,kBAAkBqB,UAAUC,IAAI,UAEvDrB,EAAUqC,aAAa,gBAAgB,GACvCpC,EAAMM,YAAc,IACpBC,IACAgB,IACAA,IACAC,IAGF,SAASjB,IACWR,IADD,EACCA,EAAAA,EAAAA,EAAUmB,UADX,IACqB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAA3BmB,IAA2B,EACjBA,EAAAA,EADiB,EAAA,MACbnB,UADa,IACH,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAtBJ,IAAAA,EAAsB,EAAA,MAC/BA,EAAKK,UAAUO,OAAsBZ,eAAAA,OAAAA,EAAKR,cAC1CQ,EAAKR,YAAc,IAHe,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,MADrB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAQZP,EAAUoC,aAAa,kBAC1BnC,EAAMM,YAAc,KAIxB,SAASiB,IACHxB,GAA6C,MAA7CA,EAAUgC,QAAQC,gBAAgBC,OAAlClC,CAIEuC,IAAAA,EAAavC,EAAUmB,SAASqB,EAAgB,EAAG,IACtDrB,SAASqB,EAAgB,EAAG,IAE3BD,GAAAA,EAAWhC,YAAYqB,OAAS,EAC3BJ,OAAAA,IAGLiB,IAAAA,EAAS,IAGTC,GAAgB,IAFAF,EAAgB,EAAG,KAGhB,IAAlBrC,EAMH,OALAA,GAAiB,EACjBsC,EAAS,IACTF,EAAWhC,YAAiBkC,GAAAA,OAAAA,QAC5BF,EAAWnB,UAAUC,IAAmBoB,eAAAA,OAAAA,IAI1CF,EAAWhC,YAAiBkC,GAAAA,OAAAA,GAC5BF,EAAWnB,UAAUC,IAAmBoB,eAAAA,OAAAA,KAG1C,SAASD,EAAgBG,EAAKC,GACrBC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,GAGlD,SAASlB,IACPzB,EAAUgC,QAAQC,gBAAkB,KAE/B,IAAA,IAAIpB,EAAI,EAAGA,GAAK,EAAGA,IACtBX,EAAKW,GAAK,EAAIb,EAAUmB,SAASN,EAAI,GAAGM,UACrC6B,IAAI,SAAAjC,GACCA,OAAAA,EAAKR,YAAYqB,OAAS,GAC5B5B,EAAUgC,QAAQC,gBACdH,iBAAAA,OAAAA,OAAO9B,EAAUgC,QAAQC,iBAAmB,EADhD,gBAIOlB,EAAKR,aAGP,IA1PfP,EAAUgC,QAAQC,gBAAkB,KAEpCpC,EAAmBoD,iBAAiB,QAAS,SAACC,GAC5Cf,MAGFrC,SAASqD,KAAKF,iBAAiB,UAAW,SAACC,GACrC,GAAClD,EAAUoC,aAAa,gBAMpBc,OAFRA,EAAIE,iBAEIF,EAAIG,MACL,IAAA,UAGA,IAAA,YAGA,IAAA,YAGA,IAAA,aACHjD,EAAU8C,EAAIG","file":"main.e8a8ef1b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst buttonStartRestart = document.querySelector('.start');\nconst tableBody = document.querySelector('tbody');\nconst score = document.querySelector('.game-score');\nconst info = {\n  1: [],\n  2: [],\n  3: [],\n  4: [],\n};\nlet rondomCounter = 0;\n\ntableBody.dataset.countEmplyCells = '16';\n\nbuttonStartRestart.addEventListener('click', (evt) => {\n  start();\n});\n\ndocument.body.addEventListener('keydown', (evt) => {\n  if (!tableBody.hasAttribute('clickedStart')) {\n    return;\n  }\n\n  evt.preventDefault();\n\n  switch (evt.code) {\n    case 'ArrowUp':\n      moveCells(evt.code);\n      break;\n    case 'ArrowDown':\n      moveCells(evt.code);\n      break;\n    case 'ArrowLeft':\n      moveCells(evt.code);\n      break;\n    case 'ArrowRight':\n      moveCells(evt.code);\n      break;\n    default:\n      break;\n  }\n});\n\nfunction moveCells(direction) {\n  const counter = score.textContent;\n\n  restart();\n\n  const infoTraffic = {\n    1: [],\n    2: [],\n    3: [],\n    4: [],\n  };\n\n  infoTrafficInteration(infoTraffic, direction);\n\n  const infoTrafficSort = {\n    1: [],\n    2: [],\n    3: [],\n    4: [],\n  };\n\n  infoTrafficInterationSort(infoTraffic, infoTrafficSort, direction);\n\n  for (let i = 0; i < 4; i++) {\n    infoTrafficSort[i + 1].forEach((cell, index) => {\n      if (cell !== undefined) {\n        const currentCell = tableBody.children[i].children[index];\n\n        currentCell.textContent = `${cell}`;\n        currentCell.classList.add(`field-cell--${currentCell.textContent}`);\n      }\n    });\n  }\n\n  winnerGame();\n  stopGame(counter);\n  addRondomNumber();\n  upDateInfo();\n};\n\nfunction winnerGame() {\n  if (+score.textContent !== 2048) {\n    return;\n  }\n  document.getElementsByClassName('message-win')[0].classList.remove('hidden');\n};\n\nfunction infoTrafficInterationSort(infoTraffic, infoTrafficSort, direction) {\n  switch (direction) {\n    case 'ArrowLeft':\n      for (let i = 0; i < 4; i++) {\n        infoTrafficSort[i + 1] = [\n          infoTraffic[i + 1][0],\n          infoTraffic[i + 1][1],\n          infoTraffic[i + 1][2],\n          infoTraffic[i + 1][3],\n        ];\n      }\n      break;\n    case 'ArrowRight':\n      for (let i = 0; i < 4; i++) {\n        infoTrafficSort[i + 1] = [\n          infoTraffic[i + 1][infoTraffic[i + 1].length - 4],\n          infoTraffic[i + 1][infoTraffic[i + 1].length - 3],\n          infoTraffic[i + 1][infoTraffic[i + 1].length - 2],\n          infoTraffic[i + 1][infoTraffic[i + 1].length - 1],\n        ];\n      }\n      break;\n    case 'ArrowUp':\n      for (let i = 0; i < 4; i++) {\n        infoTrafficSort[i + 1] = [\n          infoTraffic[1][i],\n          infoTraffic[2][i],\n          infoTraffic[3][i],\n          infoTraffic[4][i],\n        ];\n      }\n      break;\n    case 'ArrowDown':\n      for (let i = 0; i < 4; i++) {\n        infoTrafficSort[4 - i] = [\n          infoTraffic[1][infoTraffic[1].length - 1 - i],\n          infoTraffic[2][infoTraffic[2].length - 1 - i],\n          infoTraffic[3][infoTraffic[3].length - 1 - i],\n          infoTraffic[4][infoTraffic[4].length - 1 - i],\n        ];\n      }\n      break;\n    default:\n      break;\n  }\n};\n\nfunction infoTrafficInteration(infoTraffic, direction) {\n  if (direction === 'ArrowUp'\n      || direction === 'ArrowDown') {\n    for (let i = 0; i < 4; i++) {\n      infoTraffic[i + 1] = [\n        info[1][i],\n        info[2][i],\n        info[3][i],\n        info[4][i],\n      ].filter(cell => cell !== 0);\n\n      infoTraffic[i + 1].forEach((cell, index) => {\n        if (Number(cell) === Number(infoTraffic[i + 1][index + 1])) {\n          infoTraffic[i + 1][index] = `${+cell * 2}`;\n          score.textContent = `${+score.textContent + ((+cell) * 2)}`;\n          infoTraffic[i + 1].splice(index + 1, 1);\n        }\n      });\n    }\n  }\n\n  if (direction === 'ArrowLeft'\n    || direction === 'ArrowRight') {\n    for (let i = 0; i < 4; i++) {\n      infoTraffic[i + 1] = info[i + 1].filter(cell => cell !== 0);\n\n      infoTraffic[i + 1].forEach((cell, index) => {\n        if (Number(cell) === Number(infoTraffic[i + 1][index + 1])) {\n          infoTraffic[i + 1][index + 1] = `${+cell * 2}`;\n          score.textContent = `${+score.textContent + ((+cell) * 2)}`;\n          infoTraffic[i + 1].splice(index, 1);\n        }\n      });\n    }\n  }\n};\n\nfunction stopGame(counter) {\n  if ((+score.textContent) - counter === 0\n    && tableBody.dataset.countEmplyCells.trim() === '0') {\n    document.querySelector('.message-lose')\n      .classList.remove('hidden');\n  }\n};\n\nfunction start() {\n  if (tableBody.hasAttribute('clickedStart')) {\n    document.getElementsByClassName('message-win')[0].classList.add('hidden');\n  }\n\n  rondomCounter = 0;\n  tableBody.dataset.countEmplyCells = '16';\n  document.querySelector('.message-lose').classList.add('hidden');\n  buttonStartRestart.classList.remove('start');\n  buttonStartRestart.classList.add('restart');\n  buttonStartRestart.textContent = 'Restart';\n  document.querySelector('.message-start').classList.add('hidden');\n\n  tableBody.setAttribute('clickedStart', true);\n  score.textContent = '0';\n  restart();\n  addRondomNumber();\n  addRondomNumber();\n  upDateInfo();\n};\n\nfunction restart() {\n  for (const row of tableBody.children) {\n    for (const cell of row.children) {\n      cell.classList.remove(`field-cell--${cell.textContent}`);\n      cell.textContent = '';\n    }\n  }\n\n  if (!tableBody.hasAttribute('clickedStart')) {\n    score.textContent = '0';\n  }\n};\n\nfunction addRondomNumber() {\n  if (tableBody.dataset.countEmplyCells.trim() === '0') {\n    return;\n  }\n\n  const rondomCell = tableBody.children[getRondomNumber(0, 4)]\n    .children[getRondomNumber(0, 4)];\n\n  if (rondomCell.textContent.length > 0) {\n    return addRondomNumber();\n  }\n\n  let number = '2';\n  const rondomIndex = getRondomNumber(1, 10);\n\n  if (rondomIndex === 1\n    || rondomCounter === 0) {\n    rondomCounter += 1;\n    number = '4';\n    rondomCell.textContent = `${number}`;\n    rondomCell.classList.add(`field-cell--${number}`);\n\n    return;\n  }\n  rondomCell.textContent = `${number}`;\n  rondomCell.classList.add(`field-cell--${number}`);\n};\n\nfunction getRondomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nfunction upDateInfo() {\n  tableBody.dataset.countEmplyCells = '16';\n\n  for (let i = 1; i <= 4; i++) {\n    info[i] = [...tableBody.children[i - 1].children]\n      .map(cell => {\n        if (cell.textContent.length > 0) {\n          tableBody.dataset.countEmplyCells = `\n            ${Number(tableBody.dataset.countEmplyCells) - 1}\n          `;\n\n          return cell.textContent;\n        }\n\n        return 0;\n      });\n  }\n};\n"]}